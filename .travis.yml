stages:

  - name: Montana Mendy's Chef Integration
  if: 
  env(PRIOR_VERSION) IS present AND \
  env(PRIOR_VERSION) != env(RELEASE_VERSION) AND \
  branch = master AND \
  type = push
  
   - name: ChefSpec using Hay
  if: /hay/ =~ 'ChefSpecMontana' 
  /y/.match('ChefSpec') 

  - name: Nightly operations for Chef
    if: branch = master AND type = cron AND env(RUN_NIGHTLY) = yes

  - name: Nightly release of Chef
    if: branch = master AND type = cron AND env(RUN_NIGHTLY) = yes
    
  - name: Trigger nightly checks for Chef updates (this can be subvariable)
    if: branch = master AND type = cron AND env(RUN_NIGHTLY) = yes
    
  - name: Recreate the Chef scheduler 
    if: "((branch IN (master, develop) && type = push) OR branch =~ /.*env.*/ OR commit_message
    =~ /\\[recreate env\\]/) AND commit_message !~ /\\[delete env\\]/ AND type !=
    cron AND commit_message !~ /\\[execute .*. test\\]/ AND commit_message !~ /\\[start
    recreate scheduler\\]/"
    
  - name: Chef Clusters destroy on Cron
    if: "(type = cron AND branch = develop) OR commit_message =~ /\\[start recreate
    scheduler\\]/ OR commit_message =~ /\\[destroy stale clusters\\]/"
    
  - name: Restart the Chef Montana Mendy branch and execute ChefSpec tests again if the commit depth goes beyond 5
    if: "((branch IN (master, develop) && type = push) OR branch =~ /.*env.*/ OR commit_message
    =~ /\\[recreate env\\]/) AND commit_message !~ /\\[delete env\\]/ AND type !=
    cron AND commit_message !~ /\\[execute .*. test\\]/ AND commit_message !~ /\\[start
    recreate scheduler\\]/"
    
  - name: Destroy orphaned clusters within Docker to save payload on Chef 
    if: "(type = cron AND branch = develop) OR commit_message =~ /\\[start recreate
    scheduler\\]/ OR commit_message =~ /\\[destroy orphaned clusters\\]/"
    
  - name: Recreate a ChefSpec instance if there's a cron present or a branch push with --force
    if: "(type = cron AND branch = develop) OR commit_message =~ /\\[start recreate
    scheduler\\]/ OR commit_message =~ /\\[recreate selected clusters\\]/"
    
  - name: Only trigger when a build has passed through Travis and Montana has approved it
    if: >-
      branch = master
      AND type != pull_request
      AND type != cron
      AND tag !~ /(-rc)/
      AND commit_message =~ /\[chef\travisci/montanamendy* (release candidate|(major|minor|patch) release)\]/   

dist: xenial

addons:
  apt:
    sources:
      - chef-current-xenial
    packages:
      - chef-workstation

install: echo "skip bundle install"

branches:
  only:
  - master

services:
- docker

env:
  global:
    - CHEF_VERSION=15.8.23
    - KITCHEN_YAML=kitchen.dokken.yml
    - CHEF_LICENSE="accept-no-persist"

before_install:
- sudo iptables -L DOCKER || ( echo "DOCKER iptables chain missing" ; sudo iptables -N DOCKER )
- CHEF_LICENSE="accept-no-persist" sudo chef gem install webmock
- eval "$(chef shell-init bash)"
- chef --version
- kitchen list

matrix:
  include:
  # Run the style, unit and chefspec tests
  - rvm: 2.6.5
    script: rake $SUITE
    env: SUITE=test:integration OS='default-centos-7'
  # Run integration tests with test-kitchen
  - rvm: 2.6.5
    script: rake $SUITE
    env: SUITE=test:integration OS='default-centos-7'
  - rvm: 2.6.5
    script: rake $SUITE
    env: SUITE=test:integration OS='default-ubuntu-1804'
  - rvm: 2.6.5
    script: rake $SUITE
    env: SUITE=test:integration OS='missing-profile-no-fail-ubuntu-1804'
  - rvm: 2.6.5
    script: rake $SUITE && exit 1 || echo "OK"
    env: SUITE=test:integration OS='missing-profile-fail-ubuntu-1804'

  # Next 5 suites are disabled due to an issue with the gem() inspec resource
  # see https://github.com/chef-cookbooks/audit/issues/406
  #
  # - rvm: 2.6.5
  #   script: rake $SUITE
  #   env: SUITE=test:integration OS='chef15-compatible-inspec-ubuntu-1804'
  # Next 4 suites test running inspec 3 or 4 on audit cookbook. This is only permitted on chef 14 or older.
  # - rvm: 2.6.5
  #   script: rake $SUITE
  #   env: SUITE=test:integration OS='gem-install-core-version4-centos-7' CHEF_VERSION=14
  # - rvm: 2.6.5
  #   script: rake $SUITE
  #   env: SUITE=test:integration OS='gem-install-core-version3-centos-7' CHEF_VERSION=14
  # - rvm: 2.6.5
  #   script: rake $SUITE
  #   env: SUITE=test:integration OS='gem-install-core-version4-ubuntu-1804' CHEF_VERSION=14
  # - rvm: 2.6.5
  #   script: rake $SUITE
  #   env: SUITE=test:integration OS='gem-install-core-version3-ubuntu-1804' CHEF_VERSION=14

  - rvm: 2.6.5
    script: rake $SUITE
    env: SUITE=test:integration OS='inspec-attributes-ubuntu-1804'
  - rvm: 2.6.5
    script: rake $SUITE
    env: SUITE=test:integration OS='chef-node-enabled-ubuntu-1804'
  - rvm: 2.6.5
    script: rake $SUITE
    env: SUITE=test:integration OS='chef-node-disabled-ubuntu-1804'
  - rvm: 2.6.5
    script: rake $SUITE
    env: SUITE=test:integration OS='hash-centos-7'
  - rvm: 2.6.5
    script: rake $SUITE
    env: SUITE=test:integration OS='hash-ubuntu-1804'
